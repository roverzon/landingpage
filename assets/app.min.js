(function(){
  'use strict';
    /**
  * app Module
  *
  * Description
  */
  angular.module('pandaApp', [
    'app.core',
    'app.home',
    'app.about',
    'app.career',
    'timer'
  ]);
})();
(function(){
  'use strict';
  /**
  * app.about Module
  *
  * Description
  */
  angular
    .module('app.about', [
      'app.core'
    ])
})();
(function(){
  'use strict';
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('app.career',[
      'app.core',
      'ui.router'
    ]);
})();
(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core',[
      'blocks.router',
      'ui.router'
      ])
})();
(function(){
  /**
  * app.panda-home Module
  *
  * Description
  */
  angular
    .module('app.home',[
      'app.core'
    ])

})();
(function(){
  'use strict';
 /**
 * blocks.router Module
 *
 * Description
 */
  
  angular.module('blocks.router', [
    'ui.router'
    ]);
})();
(function(){
  'use strict';
  /**
* pandaApp Module
*
* Description
*/
angular
  .module('app.about')
  .controller('AboutController',AboutController)

  AboutController.$inject = ['$rootScope'];

  function AboutController($rootScope){
    var vm = this; 
    var top = $("#career").offset().top  - 3.5*parseFloat($('#career').css('marginTop').replace(/auto/,0));
    $('#joinus').click(function () {
        $('html,body').animate({scrollTop:top}, 500);
    });

  };

})();

(function(){
  'use strict';

  /**
  * app.home Module
  *
  * Description
  */
  angular
    .module('app.about')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    }

    function getStates() {
        return [
            {
                state: 'about',
                config: {
                    templateUrl: 'panda-about.html',
                    url: '/about',
                    controller : 'AboutController',
                    controllerAs : 'AboutCtrl',
                    title : '關於我們'
                }
            }
        ];
    };
    
})();

(function(){
  'use strict';
  
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('app.career')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'careers',
          config: {
              templateUrl: 'panda-career.html',
              url: '/careers/:id',
              title : '職涯'
          }
        }
      ];
    };

})();
(function(){
  'use strict';
    /**
  * panadaApp Module
  *
  * Description
  */
  angular
    .module('app.career')
    .controller('CareerController',CareerController);

    CareerController.$inject = [];

    function CareerController(){
      var vm = this; 
      // vm.careerId = $stateParams.id;
      console.log("it is career page");
    };

})();



(function(){
  /**
* app.home Module
*
* Description
*/
angular
  .module('app.home')
  .controller('HomeController',HomeController)

  HomeController.$inject = ['AccountService'];

  function HomeController(AccountService){
    var vm = this;
    vm.account = {};
    vm.postEmail = postEmail;
    $(".headline").hide().animate({ left:"0px", opacity:"show"}, 1500);

    function postEmail(){
      return AccountService.postEmail(vm.account);
    };
  };

})();
(function(){
  'use strict';
  /**
  * app.home Module
  *
  * Description
  */
  angular
    .module('app.home')
    .run(appRun);

    /* @ngInject */

    appRun.$inject = ['routerHelper'];

    function appRun(routerHelper) {
        routerHelper.configureState(getStates(),'/');
    };

    function getStates() {
        return [
            {
                state: 'home',
                config: {
                    templateUrl: 'panda-home.html',
                    url: '/',
                    controller : 'HomeController',
                    controllerAs : 'HomeCtrl',
                    title : '首頁'
                }
            }
        ];
    };

})();
(function(){
  'use strict';

  /**
  * blocks.router Module
  *
  * Description
  */
  angular
    .module('blocks.router')
    .provider('routerHelper',routerHelperProvider);

    routerHelperProvider.$inject = ['$locationProvider','$stateProvider','$urlRouterProvider'];

  function routerHelperProvider($locationProvider,$stateProvider,$urlRouterProvider){

    var config = {
      docTitle : '成長熊貓'
    }

    // $locationProvider.html5Mode({
    //   enabled: true,
    //   requireBase: false
    // });

    this.$get = RouterHelper;

    RouterHelper.$inject = ['$state','$rootScope'];

    function RouterHelper($state, $rootScope){
      var hasOtherwise = false; 

      var service = {
        configureState : configureState,
        getStates : getStates
      };

      init();

      return service;

      function configureState(states, otherwisePath){
        states.forEach(function(state){
          $stateProvider.state(state.state,state.config);
        });

        if ( otherwisePath && !hasOtherwise) {
          hasOtherwise = true; 
          $urlRouterProvider.otherwise(otherwisePath);
        };
      };
      function getStates(){ return $state.get()};

      function init(){
        updateDocTitle();
      };

      function updateDocTitle(){
        $rootScope.$on('$stateChangeSuccess',
          function(event, toState, toParams, fromState, fromParams){
            var title = config.docTitle + ' | ' + (toState.title || '');
            $rootScope.title = title;
          });
      }
    
    };
  };

})();

(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core')
    .factory('AccountService',AccountService);

    AccountService.$inject = ['$http'];

    function AccountService($http){
        return {
          postEmail : postEmail
        };

        function postEmail(account){
          return $http.post('/api/accounts', account)
                  .then(postSuccess)
                  .catch(postFailed);

          function postSuccess(res){
            return console.log(res.data);
          };

          function postFailed(res){
            return console.log(res);
          };

        }; 
    };

})();
//# sourceMappingURL=data:application/json;base64,
