(function(){
  'use strict';
    /**
  * app Module
  *
  * Description
  */
  angular.module('pandaApp', [
    'app.core',
    'app.home',
    'app.about',
    'app.career',
    'timer'
  ]);
})();
(function(){
  'use strict';
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('app.career',[
      'app.core',
      'ui.router'
    ]);
})();
(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core',[
      'blocks.router',
      'ui.router'
      ])
})();
(function(){
  /**
  * app.panda-home Module
  *
  * Description
  */
  angular
    .module('app.home',[
      'app.core'
    ])

})();
(function(){
  'use strict';
  /**
  * app.about Module
  *
  * Description
  */
  angular
    .module('app.about', [
      'app.core'
    ])
})();
(function(){
  'use strict';
 /**
 * blocks.router Module
 *
 * Description
 */
  
  angular.module('blocks.router', [
    'ui.router'
    ]);
})();
(function(){
  'use strict';
  
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('app.career')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'careers',
          config: {
              templateUrl: 'panda-career.html',
              url: '/careers/:id',
              title : '職涯'
          }
        }
      ];
    };

})();
(function(){
  'use strict';
    /**
  * panadaApp Module
  *
  * Description
  */
  angular
    .module('app.career')
    .controller('CareerController',CareerController);

    CareerController.$inject = [];

    function CareerController(){
      var vm = this; 
      // vm.careerId = $stateParams.id;
      console.log("it is career page");
    };

})();



(function(){
  /**
* app.home Module
*
* Description
*/
angular
  .module('app.home')
  .controller('HomeController',HomeController)

  HomeController.$inject = ['AccountService'];

  function HomeController(AccountService){
    var vm = this; 
    vm.email = 'roverzon@gmail.com';
    vm.postEmail = postEmail;
    $(".headline").hide().animate({ left:"0px", opacity:"show"}, 1500);

    function postEmail(email){
      return AccountService.postEmail(vm.email);
    };
  };

})();
(function(){
  'use strict';
  /**
  * app.home Module
  *
  * Description
  */
  angular
    .module('app.home')
    .run(appRun);

    /* @ngInject */

    appRun.$inject = ['routerHelper'];

    function appRun(routerHelper) {
        routerHelper.configureState(getStates(),'/');
    };

    function getStates() {
        return [
            {
                state: 'home',
                config: {
                    templateUrl: 'panda-home.html',
                    url: '/',
                    controller : 'HomeController',
                    controllerAs : 'HomeCtrl',
                    title : '首頁'
                }
            }
        ];
    };

})();
(function(){
  'use strict';
  /**
* pandaApp Module
*
* Description
*/
angular
  .module('app.about')
  .controller('AboutController',AboutController)

  AboutController.$inject = ['$rootScope'];

  function AboutController($rootScope){
    var vm = this; 
    var top = $("#career").offset().top  - 3.5*parseFloat($('#career').css('marginTop').replace(/auto/,0));
    $('#joinus').click(function () {
        $('html,body').animate({scrollTop:top}, 500);
    });

  };

})();

(function(){
  'use strict';

  /**
  * app.home Module
  *
  * Description
  */
  angular
    .module('app.about')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    }

    function getStates() {
        return [
            {
                state: 'about',
                config: {
                    templateUrl: 'panda-about.html',
                    url: '/about',
                    controller : 'AboutController',
                    controllerAs : 'AboutCtrl',
                    title : '關於我們'
                }
            }
        ];
    };
    
})();

(function(){
  'use strict';

  /**
  * blocks.router Module
  *
  * Description
  */
  angular
    .module('blocks.router')
    .provider('routerHelper',routerHelperProvider);

    routerHelperProvider.$inject = ['$locationProvider','$stateProvider','$urlRouterProvider'];

  function routerHelperProvider($locationProvider,$stateProvider,$urlRouterProvider){

    var config = {
      docTitle : '成長熊貓'
    }

    // $locationProvider.html5Mode({
    //   enabled: true,
    //   requireBase: false
    // });

    this.$get = RouterHelper;

    RouterHelper.$inject = ['$state','$rootScope'];

    function RouterHelper($state, $rootScope){
      var hasOtherwise = false; 

      var service = {
        configureState : configureState,
        getStates : getStates
      };

      init();

      return service;

      function configureState(states, otherwisePath){
        states.forEach(function(state){
          $stateProvider.state(state.state,state.config);
        });

        if ( otherwisePath && !hasOtherwise) {
          hasOtherwise = true; 
          $urlRouterProvider.otherwise(otherwisePath);
        };
      };
      function getStates(){ return $state.get()};

      function init(){
        updateDocTitle();
      };

      function updateDocTitle(){
        $rootScope.$on('$stateChangeSuccess',
          function(event, toState, toParams, fromState, fromParams){
            var title = config.docTitle + ' | ' + (toState.title || '');
            $rootScope.title = title;
          });
      }
    
    };
  };

})();

(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core')
    .factory('AccountService',AccountService);

    AccountService.$inject = ['$http'];

    function AccountService($http){
        return {
          postEmail : postEmail
        };

        function postEmail(mail){
          return $http.post('/api/accounts', mail)
                  .then(postSuccess)
                  .catch(postFailed);

          function postSuccess(res){
            return console.log(res);
          };

          function postFailed(res){
            return console.log(res);
          };

        }; 
    };

})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJjYXJlZXIvY2FyZWVyLm1vZHVsZS5qcyIsImNvcmVzL2NvcmUubW9kdWxlLmpzIiwiaG9tZS9ob21lLm1vZHVsZS5qcyIsImFib3V0L2Fib3V0Lm1vZHVsZS5qcyIsImJsb2NrL3JvdXRlci9yb3V0ZXIubW9kdWxlLmpzIiwiY2FyZWVyL2NhcmVlci5yb3V0ZXIuanMiLCJjYXJlZXIvY2FycmVyLmN0cmwuanMiLCJob21lL2hvbWUuY3RybC5qcyIsImhvbWUvaG9tZS5yb3V0ZS5qcyIsImFib3V0L2Fib3V0LmN0cmwuanMiLCJhYm91dC9hYm91dC5yb3V0ZS5qcyIsImJsb2NrL3JvdXRlci9yb3V0ZXItaGVscGVyLnByb3ZpZGVyLmpzIiwiY29yZXMvZGF0YVNlcnZpY2UvYWNjb3VudC5zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLENBQUEsVUFBQTtFQUNBOzs7Ozs7RUFNQSxRQUFBLE9BQUEsWUFBQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7OztBQ1pBLENBQUEsVUFBQTtFQUNBOzs7Ozs7RUFNQTtLQUNBLE9BQUEsYUFBQTtNQUNBO01BQ0E7OztBQ1ZBLENBQUEsVUFBQTtFQUNBOzs7Ozs7RUFNQTtLQUNBLE9BQUEsV0FBQTtNQUNBO01BQ0E7OztBQ1ZBLENBQUEsVUFBQTs7Ozs7O0VBTUE7S0FDQSxPQUFBLFdBQUE7TUFDQTs7OztBQ1JBLENBQUEsVUFBQTtFQUNBOzs7Ozs7RUFNQTtLQUNBLE9BQUEsYUFBQTtNQUNBOzs7QUNUQSxDQUFBLFVBQUE7RUFDQTs7Ozs7OztFQU9BLFFBQUEsT0FBQSxpQkFBQTtJQUNBOzs7QUNUQSxDQUFBLFVBQUE7RUFDQTs7Ozs7OztFQU9BO0tBQ0EsT0FBQTtLQUNBLElBQUE7O0lBRUEsT0FBQSxVQUFBLENBQUE7O0lBRUEsU0FBQSxRQUFBLGNBQUE7TUFDQSxhQUFBLGVBQUE7S0FDQTs7SUFFQSxTQUFBLFdBQUE7TUFDQSxPQUFBO1FBQ0E7VUFDQSxPQUFB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RUEsQ0FBQSxVQUFBO0VBQ0E7Ozs7OztFQU1BO0tBQ0EsT0FBQTtLQUNBLFFBQUEsaUJBQUE7O0lBRUEsZUFBQSxVQUFBLENBQUE7O0lBRUEsU0FBQSxlQUFBLE1BQUE7UUFDQSxPQUFBO1VBQ0EsWUFBQTs7O1FBR0EsU0FBQSxVQUFBLEtBQUE7VUFDQSxPQUFBLE1BQUEsS0FBQSxpQkFBQTttQkFDQSxLQUFBO21CQUNBLE1BQUE7O1VBRUEsU0FBQSxZQUFBLElBQUE7WUFDQSxPQUFBLFFBQUEsSUFBQTtXQUNBOztVQUVBLFNBQUEsV0FBQSxJQUFBO1lBQ0EsT0FBQSxRQUFBLElBQUE7V0FDQTs7U0FFQTtLQUNBOztLQUVBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAgIC8qKlxuICAqIGFwcCBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXIubW9kdWxlKCdwYW5kYUFwcCcsIFtcbiAgICAnYXBwLmNvcmUnLFxuICAgICdhcHAuaG9tZScsXG4gICAgJ2FwcC5hYm91dCcsXG4gICAgJ2FwcC5jYXJlZXInLFxuICAgICd0aW1lcidcbiAgXSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGFwcC5jYXJlZXIgTW9kdWxlXG4gICpcbiAgKiBEZXNjcmlwdGlvblxuICAqL1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLmNhcmVlcicsW1xuICAgICAgJ2FwcC5jb3JlJyxcbiAgICAgICd1aS5yb3V0ZXInXG4gICAgXSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGFwcC5jb3JlIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5jb3JlJyxbXG4gICAgICAnYmxvY2tzLnJvdXRlcicsXG4gICAgICAndWkucm91dGVyJ1xuICAgICAgXSlcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gIC8qKlxuICAqIGFwcC5wYW5kYS1ob21lIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5ob21lJyxbXG4gICAgICAnYXBwLmNvcmUnXG4gICAgXSlcblxufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAvKipcbiAgKiBhcHAuYWJvdXQgTW9kdWxlXG4gICpcbiAgKiBEZXNjcmlwdGlvblxuICAqL1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLmFib3V0JywgW1xuICAgICAgJ2FwcC5jb3JlJ1xuICAgIF0pXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gLyoqXG4gKiBibG9ja3Mucm91dGVyIE1vZHVsZVxuICpcbiAqIERlc2NyaXB0aW9uXG4gKi9cbiAgXG4gIGFuZ3VsYXIubW9kdWxlKCdibG9ja3Mucm91dGVyJywgW1xuICAgICd1aS5yb3V0ZXInXG4gICAgXSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIFxuICAvKipcbiAgKiBhcHAuY2FyZWVyIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5jYXJlZXInKVxuICAgIC5ydW4oYXBwUnVuKTtcblxuICAgIGFwcFJ1bi4kaW5qZWN0ID0gWydyb3V0ZXJIZWxwZXInXTtcblxuICAgIGZ1bmN0aW9uIGFwcFJ1biggcm91dGVySGVscGVyICl7XG4gICAgICByb3V0ZXJIZWxwZXIuY29uZmlndXJlU3RhdGUoZ2V0U3RhdGVzKCkpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBnZXRTdGF0ZXMoKXtcbiAgICAgIHJldHVybiBbXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0ZTogJ2NhcmVlcnMnLFxuICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhbmRhLWNhcmVlci5odG1sJyxcbiAgICAgICAgICAgICAgdXJsOiAnL2NhcmVlcnMvOmlkJyxcbiAgICAgICAgICAgICAgdGl0bGUgOiAn6IG35ravJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXTtcbiAgICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gICAgLyoqXG4gICogcGFuYWRhQXBwIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5jYXJlZXInKVxuICAgIC5jb250cm9sbGVyKCdDYXJlZXJDb250cm9sbGVyJyxDYXJlZXJDb250cm9sbGVyKTtcblxuICAgIENhcmVlckNvbnRyb2xsZXIuJGluamVjdCA9IFtdO1xuXG4gICAgZnVuY3Rpb24gQ2FyZWVyQ29udHJvbGxlcigpe1xuICAgICAgdmFyIHZtID0gdGhpczsgXG4gICAgICAvLyB2bS5jYXJlZXJJZCA9ICRzdGF0ZVBhcmFtcy5pZDtcbiAgICAgIGNvbnNvbGUubG9nKFwiaXQgaXMgY2FyZWVyIHBhZ2VcIik7XG4gICAgfTtcblxufSkoKTtcblxuXG4iLCIoZnVuY3Rpb24oKXtcbiAgLyoqXG4qIGFwcC5ob21lIE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXJcbiAgLm1vZHVsZSgnYXBwLmhvbWUnKVxuICAuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLEhvbWVDb250cm9sbGVyKVxuXG4gIEhvbWVDb250cm9sbGVyLiRpbmplY3QgPSBbJ0FjY291bnRTZXJ2aWNlJ107XG5cbiAgZnVuY3Rpb24gSG9tZUNvbnRyb2xsZXIoQWNjb3VudFNlcnZpY2Upe1xuICAgIHZhciB2bSA9IHRoaXM7IFxuICAgIHZtLmVtYWlsID0gJ3JvdmVyem9uQGdtYWlsLmNvbSc7XG4gICAgdm0ucG9zdEVtYWlsID0gcG9zdEVtYWlsO1xuICAgICQoXCIuaGVhZGxpbmVcIikuaGlkZSgpLmFuaW1hdGUoeyBsZWZ0OlwiMHB4XCIsIG9wYWNpdHk6XCJzaG93XCJ9LCAxNTAwKTtcblxuICAgIGZ1bmN0aW9uIHBvc3RFbWFpbChlbWFpbCl7XG4gICAgICByZXR1cm4gQWNjb3VudFNlcnZpY2UucG9zdEVtYWlsKHZtLmVtYWlsKTtcbiAgICB9O1xuICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGFwcC5ob21lIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5ob21lJylcbiAgICAucnVuKGFwcFJ1bik7XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cblxuICAgIGFwcFJ1bi4kaW5qZWN0ID0gWydyb3V0ZXJIZWxwZXInXTtcblxuICAgIGZ1bmN0aW9uIGFwcFJ1bihyb3V0ZXJIZWxwZXIpIHtcbiAgICAgICAgcm91dGVySGVscGVyLmNvbmZpZ3VyZVN0YXRlKGdldFN0YXRlcygpLCcvJyk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ2hvbWUnLFxuICAgICAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhbmRhLWhvbWUuaHRtbCcsXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy8nLFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyIDogJ0hvbWVDb250cm9sbGVyJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzIDogJ0hvbWVDdHJsJyxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgOiAn6aaW6aCBJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXTtcbiAgICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuKiBwYW5kYUFwcCBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ2FwcC5hYm91dCcpXG4gIC5jb250cm9sbGVyKCdBYm91dENvbnRyb2xsZXInLEFib3V0Q29udHJvbGxlcilcblxuICBBYm91dENvbnRyb2xsZXIuJGluamVjdCA9IFsnJHJvb3RTY29wZSddO1xuXG4gIGZ1bmN0aW9uIEFib3V0Q29udHJvbGxlcigkcm9vdFNjb3BlKXtcbiAgICB2YXIgdm0gPSB0aGlzOyBcbiAgICB2YXIgdG9wID0gJChcIiNjYXJlZXJcIikub2Zmc2V0KCkudG9wICAtIDMuNSpwYXJzZUZsb2F0KCQoJyNjYXJlZXInKS5jc3MoJ21hcmdpblRvcCcpLnJlcGxhY2UoL2F1dG8vLDApKTtcbiAgICAkKCcjam9pbnVzJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCdodG1sLGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6dG9wfSwgNTAwKTtcbiAgICB9KTtcblxuICB9O1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvKipcbiAgKiBhcHAuaG9tZSBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuYWJvdXQnKVxuICAgIC5ydW4oYXBwUnVuKTtcblxuICAgIGFwcFJ1bi4kaW5qZWN0ID0gWydyb3V0ZXJIZWxwZXInXTtcblxuICAgIGZ1bmN0aW9uIGFwcFJ1biggcm91dGVySGVscGVyICl7XG4gICAgICByb3V0ZXJIZWxwZXIuY29uZmlndXJlU3RhdGUoZ2V0U3RhdGVzKCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ2Fib3V0JyxcbiAgICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdwYW5kYS1hYm91dC5odG1sJyxcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnL2Fib3V0JyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlciA6ICdBYm91dENvbnRyb2xsZXInLFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXMgOiAnQWJvdXRDdHJsJyxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUgOiAn6Zec5pa85oiR5YCRJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXTtcbiAgICB9O1xuICAgIFxufSkoKTtcbiIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG5cbiAgLyoqXG4gICogYmxvY2tzLnJvdXRlciBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdibG9ja3Mucm91dGVyJylcbiAgICAucHJvdmlkZXIoJ3JvdXRlckhlbHBlcicscm91dGVySGVscGVyUHJvdmlkZXIpO1xuXG4gICAgcm91dGVySGVscGVyUHJvdmlkZXIuJGluamVjdCA9IFsnJGxvY2F0aW9uUHJvdmlkZXInLCckc3RhdGVQcm92aWRlcicsJyR1cmxSb3V0ZXJQcm92aWRlciddO1xuXG4gIGZ1bmN0aW9uIHJvdXRlckhlbHBlclByb3ZpZGVyKCRsb2NhdGlvblByb3ZpZGVyLCRzdGF0ZVByb3ZpZGVyLCR1cmxSb3V0ZXJQcm92aWRlcil7XG5cbiAgICB2YXIgY29uZmlnID0ge1xuICAgICAgZG9jVGl0bGUgOiAn5oiQ6ZW354aK6LKTJ1xuICAgIH1cblxuICAgIC8vICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh7XG4gICAgLy8gICBlbmFibGVkOiB0cnVlLFxuICAgIC8vICAgcmVxdWlyZUJhc2U6IGZhbHNlXG4gICAgLy8gfSk7XG5cbiAgICB0aGlzLiRnZXQgPSBSb3V0ZXJIZWxwZXI7XG5cbiAgICBSb3V0ZXJIZWxwZXIuJGluamVjdCA9IFsnJHN0YXRlJywnJHJvb3RTY29wZSddO1xuXG4gICAgZnVuY3Rpb24gUm91dGVySGVscGVyKCRzdGF0ZSwgJHJvb3RTY29wZSl7XG4gICAgICB2YXIgaGFzT3RoZXJ3aXNlID0gZmFsc2U7IFxuXG4gICAgICB2YXIgc2VydmljZSA9IHtcbiAgICAgICAgY29uZmlndXJlU3RhdGUgOiBjb25maWd1cmVTdGF0ZSxcbiAgICAgICAgZ2V0U3RhdGVzIDogZ2V0U3RhdGVzXG4gICAgICB9O1xuXG4gICAgICBpbml0KCk7XG5cbiAgICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgICBmdW5jdGlvbiBjb25maWd1cmVTdGF0ZShzdGF0ZXMsIG90aGVyd2lzZVBhdGgpe1xuICAgICAgICBzdGF0ZXMuZm9yRWFjaChmdW5jdGlvbihzdGF0ZSl7XG4gICAgICAgICAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoc3RhdGUuc3RhdGUsc3RhdGUuY29uZmlnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKCBvdGhlcndpc2VQYXRoICYmICFoYXNPdGhlcndpc2UpIHtcbiAgICAgICAgICBoYXNPdGhlcndpc2UgPSB0cnVlOyBcbiAgICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKG90aGVyd2lzZVBhdGgpO1xuICAgICAgICB9O1xuICAgICAgfTtcbiAgICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpeyByZXR1cm4gJHN0YXRlLmdldCgpfTtcblxuICAgICAgZnVuY3Rpb24gaW5pdCgpe1xuICAgICAgICB1cGRhdGVEb2NUaXRsZSgpO1xuICAgICAgfTtcblxuICAgICAgZnVuY3Rpb24gdXBkYXRlRG9jVGl0bGUoKXtcbiAgICAgICAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN1Y2Nlc3MnLFxuICAgICAgICAgIGZ1bmN0aW9uKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zKXtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGNvbmZpZy5kb2NUaXRsZSArICcgfCAnICsgKHRvU3RhdGUudGl0bGUgfHwgJycpO1xuICAgICAgICAgICAgJHJvb3RTY29wZS50aXRsZSA9IHRpdGxlO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIFxuICAgIH07XG4gIH07XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAvKipcbiAgKiBhcHAuY29yZSBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuY29yZScpXG4gICAgLmZhY3RvcnkoJ0FjY291bnRTZXJ2aWNlJyxBY2NvdW50U2VydmljZSk7XG5cbiAgICBBY2NvdW50U2VydmljZS4kaW5qZWN0ID0gWyckaHR0cCddO1xuXG4gICAgZnVuY3Rpb24gQWNjb3VudFNlcnZpY2UoJGh0dHApe1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBvc3RFbWFpbCA6IHBvc3RFbWFpbFxuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIHBvc3RFbWFpbChtYWlsKXtcbiAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hY2NvdW50cycsIG1haWwpXG4gICAgICAgICAgICAgICAgICAudGhlbihwb3N0U3VjY2VzcylcbiAgICAgICAgICAgICAgICAgIC5jYXRjaChwb3N0RmFpbGVkKTtcblxuICAgICAgICAgIGZ1bmN0aW9uIHBvc3RTdWNjZXNzKHJlcyl7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgZnVuY3Rpb24gcG9zdEZhaWxlZChyZXMpe1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgfTtcblxuICAgICAgICB9OyBcbiAgICB9O1xuXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
