!function(){"use strict";angular.module("pandaApp",["app.core","app.landing","app.demo","app.signup","pascalprecht.translate"])}(),function(){"use strict";angular.module("app.core",["blocks.router","ui.router"])}(),function(){"use strict";angular.module("app.demo",[])}(),function(){"use strict";angular.module("app.landing",["app.core","landing.home","landing.about","landing.career","landing.navbar","landing.feature"])}(),function(){"use strict";angular.module("app.signup",[])}(),function(){"use strict";angular.module("blocks.router",["ui.router"])}(),function(){"use strict";angular.module("landing.about",["app.core"])}(),function(){"use strict";angular.module("landing.career",["app.core","ui.router"])}(),function(){"use strict";angular.module("landing.feature",[])}(),function(){angular.module("landing.home",["app.core"])}(),function(){"use strict";angular.module("landing.navbar",["ui.bootstrap","app.register"])}(),function(){"use strict";angular.module("app.register",["ui.bootstrap"])}(),function(){"use strict";function t(t){t.translations("en",{TITLE:"MarketPanda"}),t.translations("zh-t",{TITLE:"市場熊貓"}),t.translations("zh-s",{TITLE:"市场熊猫"})}angular.module("pandaApp").config(t),t.$inject=["$translateProvider"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"demo",config:{templateUrl:"panda-demo.html",url:"/demo",controller:"DemoController",controllerAs:"DemoCtrl",title:"请求演示"}}]}angular.module("app.demo").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(){}angular.module("app.demo").controller("DemoController",t),t.$inject=[]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing",config:{"abstract":!0,templateUrl:"./common/content.html"}}]}angular.module("app.landing").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t){}angular.module("app.signup").controller("SignupController",t),t.$inject=["AccountService"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"signup",config:{templateUrl:"panda-signup.html",url:"/signup",controller:"SignupController",controllerAs:"SignupCtrl",title:"注册"}}]}angular.module("app.signup").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t,n,e){function r(t,r){function u(t,r){t.forEach(function(t){n.state(t.state,t.config)}),r&&!i&&(i=!0,e.otherwise(r))}function a(){return t.get()}function l(){c()}function c(){r.$on("$stateChangeSuccess",function(t,n,e,u,a){var l=o.docTitle+" | "+(n.title||"");document.body.scrollTop=document.documentElement.scrollTop=0,r.title=l,_cl_tracker.init(),_cl_tracker.push({url:n.url,targetName:l}),_cl_tracker.track("open_page")})}var i=!1,s={configureState:u,getStates:a};return l(),s}var o={docTitle:"ConvertLab"};this.$get=r,r.$inject=["$state","$rootScope"]}angular.module("blocks.router").provider("routerHelper",t),t.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t){function n(n){function e(t){return t.data}function r(t){return console.log(t)}return t.post("http://host.51convert.cn/page/f45c9e364a0e4a82ab82dbf1049deb1b",n).then(e)["catch"](r)}return{postAccount:n}}angular.module("app.core").factory("AccountService",t),t.$inject=["$http"]}(),function(){"use strict";function t(t){var n=$("#career").offset().top-3.5*parseFloat($("#career").css("marginTop").replace(/auto/,0));$("#joinus").click(function(){$("html,body").animate({scrollTop:n},500)})}angular.module("landing.about").controller("AboutController",t),t.$inject=["$rootScope"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing.about",config:{templateUrl:"panda-about.html",url:"/about",controller:"AboutController",controllerAs:"AboutCtrl",title:"关於我们"}}]}angular.module("landing.about").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing.careers",config:{templateUrl:"panda-career.html",url:"/careers/:id",title:"职缺招聘"}}]}angular.module("landing.career").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(){console.log("it is career page")}angular.module("landing.career").controller("CareerController",t),t.$inject=[]}(),function(){"use strict";function t(){}angular.module("landing.feature").controller("FeatureController",t),t.$inject=[]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing.feature",config:{templateUrl:"panda-feature.html",url:"/features",title:"产品特色"}}]}angular.module("landing.feature").run(t),t.$inject=["routerHelper"]}(),function(){function t(t){function n(){return t.postAccount(e.account)}var e=this;e.account={},e.submit=n,$(".headline").hide().animate({left:"0px",opacity:"show"},1500),window.callback=function(){console.log("angular callback")}}angular.module("landing.home").controller("HomeController",t),t.$inject=["AccountService"]}(),function(){"use strict";function t(t){t.configureState(n(),"/")}function n(){return[{state:"landing.home",config:{templateUrl:"panda-home.html",url:"/",controller:"HomeController",controllerAs:"HomeCtrl",title:"首页"}}]}angular.module("landing.home").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t,n,e,r){function o(){return t.open({animation:!0,templateUrl:"register.modal.html",controller:"RegisterController",controllerAs:"RegisterCtrl",size:"md"})}var u=this;u.scroll=!1,u.text="hello go go",u.openRegisterModal=o,r("TITLE").then(function(t){console.log(t)}),$("#try").on("scrollstart",function(){alert("Started scrolling!")})}angular.module("landing.navbar").controller("NavbarController",t),t.$inject=["$uibModal","$window","$scope","$translate"]}(),function(){"use strict";function t(t,n){function e(){t.postAccount(o.account).then(function(t){t&&n.dismiss("cancel")})}function r(){n.dismiss("cancel")}var o=this;o.account={},o.submitAccount=e,o.cancel=r}angular.module("app.register").controller("RegisterController",t),t.$inject=["AccountService","$uibModalInstance"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJjb3Jlcy9jb3JlLm1vZHVsZS5qcyIsImRlbW8vZGVtby5tb2R1bGUuanMiLCJsYW5kaW5nL2xhbmRpbmcubW9kdWxlLmpzIiwic2lnbnVwL3NpZ251cC5tb2R1bGUuanMiLCJibG9jay9yb3V0ZXIvcm91dGVyLm1vZHVsZS5qcyIsImxhbmRpbmcvYWJvdXQvYWJvdXQubW9kdWxlLmpzIiwibGFuZGluZy9jYXJlZXIvY2FyZWVyLm1vZHVsZS5qcyIsImxhbmRpbmcvZmVhdHVyZS9mZWF0dXJlLm1vZHVsZS5qcyIsImxhbmRpbmcvaG9tZS9ob21lLm1vZHVsZS5qcyIsImxhbmRpbmcvbmF2YmFyL25hdmJhci5tb2R1bGUuanMiLCJtb2RhbC9yZWdpc3Rlci9yZWdpc3Rlci5tb2R1bGUuanMiLCJhcHAuY29uZmlnLmpzIiwiZGVtby9kZW1vLnJvdXRlci5qcyIsImRlbW8vZGVtb24uY3RybC5qcyIsImxhbmRpbmcvbGFuZGluZy5yb3V0ZXIuanMiLCJzaWdudXAvc2lnbnVwLmN0cmwuanMiLCJzaWdudXAvc2lnbnVwLnJvdXRlLmpzIiwiYmxvY2svcm91dGVyL3JvdXRlci1oZWxwZXIucHJvdmlkZXIuanMiLCJjb3Jlcy9kYXRhU2VydmljZS9hY2NvdW50LnNlcnZpY2UuanMiLCJsYW5kaW5nL2Fib3V0L2Fib3V0LmN0cmwuanMiLCJsYW5kaW5nL2Fib3V0L2Fib3V0LnJvdXRlLmpzIiwibGFuZGluZy9jYXJlZXIvY2FyZWVyLnJvdXRlci5qcyIsImxhbmRpbmcvY2FyZWVyL2NhcnJlci5jdHJsLmpzIiwibGFuZGluZy9mZWF0dXJlL2ZlYXR1cmUuY3RybC5qcyIsImxhbmRpbmcvZmVhdHVyZS9mZWF0dXJlLnJvdXRlci5qcyIsImxhbmRpbmcvaG9tZS9ob21lLmN0cmwuanMiLCJsYW5kaW5nL2hvbWUvaG9tZS5yb3V0ZS5qcyIsImxhbmRpbmcvbmF2YmFyL25hdmJhci5jdHJsLmpzIiwibW9kYWwvcmVnaXN0ZXIvcmVnaXN0ZXIuY3RybC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiYXBwQ29uZmlnIiwiJHRyYW5zbGF0ZVByb3ZpZGVyIiwidHJhbnNsYXRpb25zIiwiVElUTEUiLCJjb25maWciLCIkaW5qZWN0IiwiYXBwUnVuIiwicm91dGVySGVscGVyIiwiY29uZmlndXJlU3RhdGUiLCJnZXRTdGF0ZXMiLCJzdGF0ZSIsInRlbXBsYXRlVXJsIiwidXJsIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsInRpdGxlIiwicnVuIiwiRGVtb0NvbnRyb2xsZXIiLCJhYnN0cmFjdCIsIlNpZ251cENvbnRyb2xsZXIiLCJBY2NvdW50U2VydmljZSIsInJvdXRlckhlbHBlclByb3ZpZGVyIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIlJvdXRlckhlbHBlciIsIiRzdGF0ZSIsIiRyb290U2NvcGUiLCJzdGF0ZXMiLCJvdGhlcndpc2VQYXRoIiwiZm9yRWFjaCIsImhhc090aGVyd2lzZSIsIm90aGVyd2lzZSIsImdldCIsImluaXQiLCJ1cGRhdGVEb2NUaXRsZSIsIiRvbiIsImV2ZW50IiwidG9TdGF0ZSIsInRvUGFyYW1zIiwiZnJvbVN0YXRlIiwiZnJvbVBhcmFtcyIsImRvY1RpdGxlIiwiZG9jdW1lbnQiLCJib2R5Iiwic2Nyb2xsVG9wIiwiZG9jdW1lbnRFbGVtZW50IiwiX2NsX3RyYWNrZXIiLCJwdXNoIiwidGFyZ2V0TmFtZSIsInRyYWNrIiwic2VydmljZSIsInRoaXMiLCIkZ2V0IiwicHJvdmlkZXIiLCIkaHR0cCIsInBvc3RBY2NvdW50IiwiYWNjb3VudCIsInBvc3RTdWNjZXNzIiwicmVzIiwiZGF0YSIsInBvc3RGYWlsZWQiLCJjb25zb2xlIiwibG9nIiwicG9zdCIsInRoZW4iLCJmYWN0b3J5IiwiQWJvdXRDb250cm9sbGVyIiwidG9wIiwiJCIsIm9mZnNldCIsInBhcnNlRmxvYXQiLCJjc3MiLCJyZXBsYWNlIiwiY2xpY2siLCJhbmltYXRlIiwiQ2FyZWVyQ29udHJvbGxlciIsIkZlYXR1cmVDb250cm9sbGVyIiwiSG9tZUNvbnRyb2xsZXIiLCJzdWJtaXQiLCJ2bSIsImhpZGUiLCJsZWZ0Iiwib3BhY2l0eSIsIndpbmRvdyIsImNhbGxiYWNrIiwiTmF2YmFyQ29udHJvbGxlciIsIiR1aWJNb2RhbCIsIiR3aW5kb3ciLCIkc2NvcGUiLCIkdHJhbnNsYXRlIiwib3BlblJlZ2lzdGVyTW9kYWwiLCJvcGVuIiwiYW5pbWF0aW9uIiwic2l6ZSIsInNjcm9sbCIsInRleHQiLCJvbiIsImFsZXJ0IiwiUmVnaXN0ZXJDb250cm9sbGVyIiwiJHVpYk1vZGFsSW5zdGFuY2UiLCJzdWJtaXRBY2NvdW50IiwiZGlzbWlzcyIsImNhbmNlbCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxZQU1BQSxTQUFBQyxPQUFBLFlBQ0EsV0FDQSxjQUNBLFdBQ0EsYUFDQSw4QkNaQSxXQUNBLFlBTUFELFNBQ0FDLE9BQUEsWUFDQSxnQkFDQSxpQkNWQSxXQUNBLFlBT0FELFNBQ0FDLE9BQUEsa0JDVEEsV0FDQSxZQU9BRCxTQUFBQyxPQUFBLGVBQ0EsV0FDQSxlQUNBLGdCQUNBLGlCQUNBLGlCQUNBLHVCQ2RBLFdBQ0EsWUFNQUQsU0FDQUMsT0FBQSxvQkNSQSxXQUNBLFlBT0FELFNBQUFDLE9BQUEsaUJBQ0EsaUJDVEEsV0FDQSxZQU1BRCxTQUNBQyxPQUFBLGlCQUNBLGdCQ1RBLFdBQ0EsWUFNQUQsU0FDQUMsT0FBQSxrQkFDQSxXQUNBLGlCQ1ZBLFdBQ0EsWUFNQUQsU0FDQUMsT0FBQSx5QkNSQSxXQU1BRCxRQUNBQyxPQUFBLGdCQUNBLGdCQ1JBLFdBQ0EsWUFNQUQsU0FDQUMsT0FBQSxrQkFDQSxlQUNBLG9CQ1ZBLFdBQ0EsWUFPQUQsU0FDQUMsT0FBQSxnQkFDQSxvQkNWQSxXQUNBLFlBWUEsU0FBQUMsR0FBQUMsR0FDQUEsRUFBQUMsYUFBQSxNQUNBQyxNQUFBLGdCQUdBRixFQUFBQyxhQUFBLFFBQ0FDLE1BQUEsU0FHQUYsRUFBQUMsYUFBQSxRQUNBQyxNQUFB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QixPQUFBQSxFQVZBekcsUUFDQUMsT0FBQSxnQkFDQWMsV0FBQSxxQkFBQXNGLEdBRUFBLEVBQUE5RixTQUFBLGlCQUFBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAgIC8qKlxuICAqIGFwcCBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXIubW9kdWxlKCdwYW5kYUFwcCcsIFtcbiAgICAnYXBwLmNvcmUnLFxuICAgICdhcHAubGFuZGluZycsXG4gICAgJ2FwcC5kZW1vJyxcbiAgICAnYXBwLnNpZ251cCcsXG4gICAgJ3Bhc2NhbHByZWNodC50cmFuc2xhdGUnXG4gIF0pO1xufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAvKipcbiAgKiBhcHAuY29yZSBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuY29yZScsW1xuICAgICAgJ2Jsb2Nrcy5yb3V0ZXInLFxuICAgICAgJ3VpLnJvdXRlcidcbiAgICAgIF0pXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG5cbiAgLyoqXG4gICogbGFuZGluZy5kZW1vIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5kZW1vJywgW10pO1xufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8qKlxuICAqIGFwcC5sYW5kaW5nIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhci5tb2R1bGUoJ2FwcC5sYW5kaW5nJyxbXG4gICAgICAnYXBwLmNvcmUnLFxuICAgICAgJ2xhbmRpbmcuaG9tZScsXG4gICAgICAnbGFuZGluZy5hYm91dCcsXG4gICAgICAnbGFuZGluZy5jYXJlZXInLFxuICAgICAgJ2xhbmRpbmcubmF2YmFyJyxcbiAgICAgICdsYW5kaW5nLmZlYXR1cmUnLFxuICAgICBcbiAgICBdKVxufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAvKipcbiAgKiBsYW5kaW5nLnNpZ251cCBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuc2lnbnVwJywgW10pO1xufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuIC8qKlxuICogYmxvY2tzLnJvdXRlciBNb2R1bGVcbiAqXG4gKiBEZXNjcmlwdGlvblxuICovXG4gIFxuICBhbmd1bGFyLm1vZHVsZSgnYmxvY2tzLnJvdXRlcicsIFtcbiAgICAndWkucm91dGVyJ1xuICAgIF0pO1xufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAvKipcbiAgKiBsYW5kaW5nLmFib3V0IE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2xhbmRpbmcuYWJvdXQnLCBbXG4gICAgICAnYXBwLmNvcmUnXG4gICAgXSlcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcbiAgLyoqXG4gICogYXBwLmNhcmVlciBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdsYW5kaW5nLmNhcmVlcicsW1xuICAgICAgJ2FwcC5jb3JlJyxcbiAgICAgICd1aS5yb3V0ZXInXG4gICAgXSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGxhbmRpbmcuZmVhdHVyZSBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdsYW5kaW5nLmZlYXR1cmUnLCBbXSlcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gIC8qKlxuICAqIGFwcC5wYW5kYS1ob21lIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2xhbmRpbmcuaG9tZScsW1xuICAgICAgJ2FwcC5jb3JlJ1xuICAgIF0pXG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcbiAgLyoqXG4gICogbGFuZGluZy5uYXZiYXIgTW9kdWxlXG4gICpcbiAgKiBEZXNjcmlwdGlvblxuICAqL1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnbGFuZGluZy5uYXZiYXInLCBbXG4gICAgICAndWkuYm9vdHN0cmFwJyxcbiAgICAgICdhcHAucmVnaXN0ZXInXG4gICAgXSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG5cbiAgLyoqXG4gICogYXBwLnJlZ2lzdGVyIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5yZWdpc3RlcicsIFtcbiAgICAgICd1aS5ib290c3RyYXAnXG4gICAgXSk7XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGFwcCBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdwYW5kYUFwcCcpXG4gICAgLmNvbmZpZyhhcHBDb25maWcpO1xuXG4gICAgYXBwQ29uZmlnLiRpbmplY3QgPSBbJyR0cmFuc2xhdGVQcm92aWRlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwQ29uZmlnKCR0cmFuc2xhdGVQcm92aWRlcil7XG4gICAgICAkdHJhbnNsYXRlUHJvdmlkZXIudHJhbnNsYXRpb25zKCdlbicsIHtcbiAgICAgICAgVElUTEU6ICdNYXJrZXRQYW5kYSdcbiAgICAgIH0pO1xuXG4gICAgICAkdHJhbnNsYXRlUHJvdmlkZXIudHJhbnNsYXRpb25zKCd6aC10Jyx7XG4gICAgICAgIFRJVExFOiAn5biC5aC054aK6LKTJ1xuICAgICAgfSk7XG5cbiAgICAgICR0cmFuc2xhdGVQcm92aWRlci50cmFuc2xhdGlvbnMoJ3poLXMnLHtcbiAgICAgICAgVElUTEU6ICfluILlnLrnhornjKsnXG4gICAgICB9KTtcbiAgICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGxhbmRpbmcuZGVtbyBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuZGVtbycpXG4gICAgLnJ1bihhcHBSdW4pO1xuXG4gICAgYXBwUnVuLiRpbmplY3QgPSBbJ3JvdXRlckhlbHBlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwUnVuKHJvdXRlckhlbHBlcil7XG4gICAgICByb3V0ZXJIZWxwZXIuY29uZmlndXJlU3RhdGUoZ2V0U3RhdGVzKCkpO1xuICAgIH07XG5cbiAgIGZ1bmN0aW9uIGdldFN0YXRlcygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ2RlbW8nLFxuICAgICAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhbmRhLWRlbW8uaHRtbCcsXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9kZW1vJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlciA6ICdEZW1vQ29udHJvbGxlcicsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBcyA6ICdEZW1vQ3RybCcsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlIDogJ+ivt+axgua8lOekuidcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF07XG4gICAgfTtcblxuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGxhbmRpbmcuZGVtbyBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuZGVtbycpXG4gICAgLmNvbnRyb2xsZXIoJ0RlbW9Db250cm9sbGVyJyxEZW1vQ29udHJvbGxlcik7XG5cbiAgICBEZW1vQ29udHJvbGxlci4kaW5qZWN0ID0gW107XG5cbiAgICBmdW5jdGlvbiBEZW1vQ29udHJvbGxlcigpe1xuXG4gICAgfTtcblxufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAvKipcbiAgKiBhcHAubGFuZGluZyBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gICAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5sYW5kaW5nJylcbiAgICAucnVuKGFwcFJ1bik7XG5cbiAgICBhcHBSdW4uJGluamVjdCA9IFsncm91dGVySGVscGVyJ107XG5cbiAgICBmdW5jdGlvbiBhcHBSdW4oIHJvdXRlckhlbHBlciApe1xuICAgICAgcm91dGVySGVscGVyLmNvbmZpZ3VyZVN0YXRlKGdldFN0YXRlcygpKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gZ2V0U3RhdGVzKCl7XG4gICAgICByZXR1cm4gW1xuICAgICAgICB7XG4gICAgICAgICAgc3RhdGU6ICdsYW5kaW5nJyxcbiAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgYWJzdHJhY3QgOiB0cnVlLFxuICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy4vY29tbW9uL2NvbnRlbnQuaHRtbCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF07XG4gICAgfTtcbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvKipcbiAgKiBsYW5kaW5nLnNpZ251cCBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdhcHAuc2lnbnVwJylcbiAgICAuY29udHJvbGxlcignU2lnbnVwQ29udHJvbGxlcicsU2lnbnVwQ29udHJvbGxlcik7XG5cbiAgICBTaWdudXBDb250cm9sbGVyLiRpbmplY3QgPSBbJ0FjY291bnRTZXJ2aWNlJ107XG5cbiAgICBmdW5jdGlvbiBTaWdudXBDb250cm9sbGVyKEFjY291bnRTZXJ2aWNlKXtcblxuICAgIH07XG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGxhbmRpbmcuc2lnbnVwIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLnNpZ251cCcpXG4gICAgLnJ1bihhcHBSdW4pO1xuXG4gICAgYXBwUnVuLiRpbmplY3QgPSBbJ3JvdXRlckhlbHBlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwUnVuKCByb3V0ZXJIZWxwZXIgKXtcbiAgICAgIHJvdXRlckhlbHBlci5jb25maWd1cmVTdGF0ZShnZXRTdGF0ZXMoKSk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ3NpZ251cCcsXG4gICAgICAgICAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAncGFuZGEtc2lnbnVwLmh0bWwnLFxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvc2lnbnVwJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlciA6ICdTaWdudXBDb250cm9sbGVyJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzIDogJ1NpZ251cEN0cmwnLFxuICAgICAgICAgICAgICAgICAgICB0aXRsZSA6ICfms6jlhownXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBdO1xuICAgIH07XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvKipcbiAgKiBibG9ja3Mucm91dGVyIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2Jsb2Nrcy5yb3V0ZXInKVxuICAgIC5wcm92aWRlcigncm91dGVySGVscGVyJyxyb3V0ZXJIZWxwZXJQcm92aWRlcik7XG5cbiAgICByb3V0ZXJIZWxwZXJQcm92aWRlci4kaW5qZWN0ID0gWyckbG9jYXRpb25Qcm92aWRlcicsJyRzdGF0ZVByb3ZpZGVyJywnJHVybFJvdXRlclByb3ZpZGVyJ107XG5cbiAgZnVuY3Rpb24gcm91dGVySGVscGVyUHJvdmlkZXIoJGxvY2F0aW9uUHJvdmlkZXIsJHN0YXRlUHJvdmlkZXIsJHVybFJvdXRlclByb3ZpZGVyKXtcblxuICAgIHZhciBjb25maWcgPSB7XG4gICAgICBkb2NUaXRsZSA6ICdDb252ZXJ0TGFiJ1xuICAgIH1cblxuICAgIC8vICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh7XG4gICAgLy8gICBlbmFibGVkOiB0cnVlLFxuICAgIC8vICAgcmVxdWlyZUJhc2U6IGZhbHNlXG4gICAgLy8gfSk7XG5cbiAgICB0aGlzLiRnZXQgPSBSb3V0ZXJIZWxwZXI7XG5cbiAgICBSb3V0ZXJIZWxwZXIuJGluamVjdCA9IFsnJHN0YXRlJywnJHJvb3RTY29wZSddO1xuXG4gICAgZnVuY3Rpb24gUm91dGVySGVscGVyKCRzdGF0ZSwgJHJvb3RTY29wZSl7XG4gICAgICB2YXIgaGFzT3RoZXJ3aXNlID0gZmFsc2U7IFxuXG4gICAgICB2YXIgc2VydmljZSA9IHtcbiAgICAgICAgY29uZmlndXJlU3RhdGUgOiBjb25maWd1cmVTdGF0ZSxcbiAgICAgICAgZ2V0U3RhdGVzIDogZ2V0U3RhdGVzXG4gICAgICB9O1xuXG4gICAgICBpbml0KCk7XG5cbiAgICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgICBmdW5jdGlvbiBjb25maWd1cmVTdGF0ZShzdGF0ZXMsIG90aGVyd2lzZVBhdGgpe1xuICAgICAgICBzdGF0ZXMuZm9yRWFjaChmdW5jdGlvbihzdGF0ZSl7XG4gICAgICAgICAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoc3RhdGUuc3RhdGUsc3RhdGUuY29uZmlnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKCBvdGhlcndpc2VQYXRoICYmICFoYXNPdGhlcndpc2UpIHtcbiAgICAgICAgICBoYXNPdGhlcndpc2UgPSB0cnVlOyBcbiAgICAgICAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKG90aGVyd2lzZVBhdGgpO1xuICAgICAgICB9O1xuICAgICAgfTtcbiAgICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpeyByZXR1cm4gJHN0YXRlLmdldCgpfTtcblxuICAgICAgZnVuY3Rpb24gaW5pdCgpe1xuICAgICAgICB1cGRhdGVEb2NUaXRsZSgpO1xuICAgICAgfTtcblxuICAgICAgZnVuY3Rpb24gdXBkYXRlRG9jVGl0bGUoKXtcbiAgICAgICAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN1Y2Nlc3MnLFxuICAgICAgICAgIGZ1bmN0aW9uKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zKXtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGNvbmZpZy5kb2NUaXRsZSArICcgfCAnICsgKHRvU3RhdGUudGl0bGUgfHwgJycpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wID0gMDtcbiAgICAgICAgICAgICRyb290U2NvcGUudGl0bGUgPSB0aXRsZTtcblxuICAgICAgICAgICAgLy8gdHJhY2tpbmcgY29kZVxuICAgICAgICAgICAgX2NsX3RyYWNrZXIuaW5pdCgpO1xuICAgICAgICAgICAgX2NsX3RyYWNrZXIucHVzaCh7IHVybDogdG9TdGF0ZS51cmwsIHRhcmdldE5hbWU6IHRpdGxlIH0pO1xuICAgICAgICAgICAgX2NsX3RyYWNrZXIudHJhY2soJ29wZW5fcGFnZScpO1xuICAgICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcbiAgLyoqXG4gICogYXBwLmNvcmUgTW9kdWxlXG4gICpcbiAgKiBEZXNjcmlwdGlvblxuICAqL1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnYXBwLmNvcmUnKVxuICAgIC5mYWN0b3J5KCdBY2NvdW50U2VydmljZScsQWNjb3VudFNlcnZpY2UpO1xuXG4gICAgQWNjb3VudFNlcnZpY2UuJGluamVjdCA9IFsnJGh0dHAnXTtcblxuICAgIGZ1bmN0aW9uIEFjY291bnRTZXJ2aWNlKCRodHRwKXtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwb3N0QWNjb3VudCA6IHBvc3RBY2NvdW50XG4gICAgICAgIH07XG5cbiAgICAgICAgZnVuY3Rpb24gcG9zdEFjY291bnQoYWNjb3VudCl7XG4gICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJ2h0dHA6Ly9ob3N0LjUxY29udmVydC5jbi9wYWdlL2Y0NWM5ZTM2NGEwZTRhODJhYjgyZGJmMTA0OWRlYjFiJywgYWNjb3VudClcbiAgICAgICAgICAgICAgICAgIC50aGVuKHBvc3RTdWNjZXNzKVxuICAgICAgICAgICAgICAgICAgLmNhdGNoKHBvc3RGYWlsZWQpO1xuXG4gICAgICAgICAgZnVuY3Rpb24gcG9zdFN1Y2Nlc3MocmVzKXtcbiAgICAgICAgICAgIHJldHVybiByZXMuZGF0YTtcbiAgICAgICAgICB9O1xuXG4gICAgICAgICAgZnVuY3Rpb24gcG9zdEZhaWxlZChyZXMpe1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgfTtcblxuICAgICAgICB9OyBcbiAgICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuKiBsYW5kaW5nLmFib3V0IE1vZHVsZVxuKlxuKiBEZXNjcmlwdGlvblxuKi9cbmFuZ3VsYXJcbiAgLm1vZHVsZSgnbGFuZGluZy5hYm91dCcpXG4gIC5jb250cm9sbGVyKCdBYm91dENvbnRyb2xsZXInLEFib3V0Q29udHJvbGxlcilcblxuICBBYm91dENvbnRyb2xsZXIuJGluamVjdCA9IFsnJHJvb3RTY29wZSddO1xuXG4gIGZ1bmN0aW9uIEFib3V0Q29udHJvbGxlcigkcm9vdFNjb3BlKXtcbiAgICB2YXIgdm0gPSB0aGlzOyBcbiAgICB2YXIgdG9wID0gJChcIiNjYXJlZXJcIikub2Zmc2V0KCkudG9wICAtIDMuNSpwYXJzZUZsb2F0KCQoJyNjYXJlZXInKS5jc3MoJ21hcmdpblRvcCcpLnJlcGxhY2UoL2F1dG8vLDApKTtcbiAgICAkKCcjam9pbnVzJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAkKCdodG1sLGJvZHknKS5hbmltYXRlKHtzY3JvbGxUb3A6dG9wfSwgNTAwKTtcbiAgICB9KTtcblxuICB9O1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvKipcbiAgKiBsYW5kaW5nLmhvbWUgTW9kdWxlXG4gICpcbiAgKiBEZXNjcmlwdGlvblxuICAqL1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnbGFuZGluZy5hYm91dCcpXG4gICAgLnJ1bihhcHBSdW4pO1xuXG4gICAgYXBwUnVuLiRpbmplY3QgPSBbJ3JvdXRlckhlbHBlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwUnVuKCByb3V0ZXJIZWxwZXIgKXtcbiAgICAgIHJvdXRlckhlbHBlci5jb25maWd1cmVTdGF0ZShnZXRTdGF0ZXMoKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0U3RhdGVzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXRlOiAnbGFuZGluZy5hYm91dCcsXG4gICAgICAgICAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAncGFuZGEtYWJvdXQuaHRtbCcsXG4gICAgICAgICAgICAgICAgICAgIHVybDogJy9hYm91dCcsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIgOiAnQWJvdXRDb250cm9sbGVyJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlckFzIDogJ0Fib3V0Q3RybCcsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlIDogJ+WFs+aWvOaIkeS7rCdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF07XG4gICAgfTtcbiAgICBcbn0pKCk7XG4iLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICBcbiAgLyoqXG4gICogYXBwLmNhcmVlciBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdsYW5kaW5nLmNhcmVlcicpXG4gICAgLnJ1bihhcHBSdW4pO1xuXG4gICAgYXBwUnVuLiRpbmplY3QgPSBbJ3JvdXRlckhlbHBlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwUnVuKCByb3V0ZXJIZWxwZXIgKXtcbiAgICAgIHJvdXRlckhlbHBlci5jb25maWd1cmVTdGF0ZShnZXRTdGF0ZXMoKSk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpe1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAge1xuICAgICAgICAgIHN0YXRlOiAnbGFuZGluZy5jYXJlZXJzJyxcbiAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdwYW5kYS1jYXJlZXIuaHRtbCcsXG4gICAgICAgICAgICAgIHVybDogJy9jYXJlZXJzLzppZCcsXG4gICAgICAgICAgICAgIHRpdGxlIDogJ+iBjOe8uuaLm+iBmCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF07XG4gICAgfTtcblxufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuICAgIC8qKlxuICAqIHBhbmFkYUFwcCBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdsYW5kaW5nLmNhcmVlcicpXG4gICAgLmNvbnRyb2xsZXIoJ0NhcmVlckNvbnRyb2xsZXInLENhcmVlckNvbnRyb2xsZXIpO1xuXG4gICAgQ2FyZWVyQ29udHJvbGxlci4kaW5qZWN0ID0gW107XG5cbiAgICBmdW5jdGlvbiBDYXJlZXJDb250cm9sbGVyKCl7XG4gICAgICB2YXIgdm0gPSB0aGlzOyBcbiAgICAgIC8vIHZtLmNhcmVlcklkID0gJHN0YXRlUGFyYW1zLmlkO1xuICAgICAgY29uc29sZS5sb2coXCJpdCBpcyBjYXJlZXIgcGFnZVwiKTtcbiAgICB9O1xuXG59KSgpO1xuXG5cbiIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGxhbmRpbmcuZmVhdHVyZSBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdsYW5kaW5nLmZlYXR1cmUnKVxuICAgIC5jb250cm9sbGVyKCdGZWF0dXJlQ29udHJvbGxlcicsRmVhdHVyZUNvbnRyb2xsZXIpO1xuXG4gICAgRmVhdHVyZUNvbnRyb2xsZXIuJGluamVjdCA9IFtdO1xuXG4gICAgZnVuY3Rpb24gRmVhdHVyZUNvbnRyb2xsZXIoKXtcbiAgICAgIFxuICAgIH07XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvKipcbiAgKiBsYW5kaW5nLmZlYXR1cmUgTW9kdWxlXG4gICpcbiAgKiBEZXNjcmlwdGlvblxuICAqL1xuICAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2xhbmRpbmcuZmVhdHVyZScpXG4gICAgLnJ1bihhcHBSdW4pO1xuXG4gICAgYXBwUnVuLiRpbmplY3QgPSBbJ3JvdXRlckhlbHBlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwUnVuKCByb3V0ZXJIZWxwZXIgKXtcbiAgICAgIHJvdXRlckhlbHBlci5jb25maWd1cmVTdGF0ZShnZXRTdGF0ZXMoKSk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGdldFN0YXRlcygpe1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAge1xuICAgICAgICAgIHN0YXRlOiAnbGFuZGluZy5mZWF0dXJlJyxcbiAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdwYW5kYS1mZWF0dXJlLmh0bWwnLFxuICAgICAgICAgICAgICB1cmw6ICcvZmVhdHVyZXMnLFxuICAgICAgICAgICAgICB0aXRsZSA6ICfkuqflk4HnibnoibInXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdO1xuICAgIH07XG5cbn0pKCk7IiwiKGZ1bmN0aW9uKCl7XG4gIC8qKlxuKiBhcHAuaG9tZSBNb2R1bGVcbipcbiogRGVzY3JpcHRpb25cbiovXG5hbmd1bGFyXG4gIC5tb2R1bGUoJ2xhbmRpbmcuaG9tZScpXG4gIC5jb250cm9sbGVyKCdIb21lQ29udHJvbGxlcicsSG9tZUNvbnRyb2xsZXIpXG5cbiAgSG9tZUNvbnRyb2xsZXIuJGluamVjdCA9IFsnQWNjb3VudFNlcnZpY2UnXTtcblxuICBmdW5jdGlvbiBIb21lQ29udHJvbGxlcihBY2NvdW50U2VydmljZSl7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2bS5hY2NvdW50ID0ge307XG4gICAgdm0uc3VibWl0ID0gc3VibWl0O1xuICAgIFxuICAgIFxuICAgICQoXCIuaGVhZGxpbmVcIikuaGlkZSgpLmFuaW1hdGUoeyBsZWZ0OlwiMHB4XCIsIG9wYWNpdHk6XCJzaG93XCJ9LCAxNTAwKTtcblxuICAgIGZ1bmN0aW9uIHN1Ym1pdCgpe1xuICAgICAgcmV0dXJuIEFjY291bnRTZXJ2aWNlLnBvc3RBY2NvdW50KHZtLmFjY291bnQpO1xuICAgIH07XG5cbiAgICB3aW5kb3cuY2FsbGJhY2sgPSBmdW5jdGlvbigpe1xuICAgICAgY29uc29sZS5sb2coXCJhbmd1bGFyIGNhbGxiYWNrXCIpO1xuICAgIH1cblxuICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG4gIC8qKlxuICAqIGxhbmRpbmcuaG9tZSBNb2R1bGVcbiAgKlxuICAqIERlc2NyaXB0aW9uXG4gICovXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdsYW5kaW5nLmhvbWUnKVxuICAgIC5ydW4oYXBwUnVuKTtcblxuICAgIC8qIEBuZ0luamVjdCAqL1xuXG4gICAgYXBwUnVuLiRpbmplY3QgPSBbJ3JvdXRlckhlbHBlciddO1xuXG4gICAgZnVuY3Rpb24gYXBwUnVuKHJvdXRlckhlbHBlcikge1xuICAgICAgICByb3V0ZXJIZWxwZXIuY29uZmlndXJlU3RhdGUoZ2V0U3RhdGVzKCksJy8nKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gZ2V0U3RhdGVzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXRlOiAnbGFuZGluZy5ob21lJyxcbiAgICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdwYW5kYS1ob21lLmh0bWwnLFxuICAgICAgICAgICAgICAgICAgICB1cmw6ICcvJyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlciA6ICdIb21lQ29udHJvbGxlcicsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBcyA6ICdIb21lQ3RybCcsXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlIDogJ+mmlumhtSdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF07XG4gICAgfTtcblxufSkoKTsiLCIoZnVuY3Rpb24oKXtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8qKlxuICAqIGxhbmRpbmcubmF2YmFyIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2xhbmRpbmcubmF2YmFyJylcbiAgICAuY29udHJvbGxlcignTmF2YmFyQ29udHJvbGxlcicsIE5hdmJhckNvbnRyb2xsZXIpO1xuXG4gICAgTmF2YmFyQ29udHJvbGxlci4kaW5qZWN0ID0gWyckdWliTW9kYWwnLCckd2luZG93JywnJHNjb3BlJywnJHRyYW5zbGF0ZSddO1xuXG4gICAgZnVuY3Rpb24gTmF2YmFyQ29udHJvbGxlcigkdWliTW9kYWwsICR3aW5kb3csJHNjb3BlLCAkdHJhbnNsYXRlKXtcbiAgICAgIHZhciB2bSA9IHRoaXM7IFxuICAgICAgdm0uc2Nyb2xsID0gZmFsc2U7XG4gICAgICB2bS50ZXh0ID0gXCJoZWxsbyBnbyBnb1wiO1xuICAgICAgdm0ub3BlblJlZ2lzdGVyTW9kYWwgPSBvcGVuUmVnaXN0ZXJNb2RhbDsgXG5cbiAgICAgIGZ1bmN0aW9uIG9wZW5SZWdpc3Rlck1vZGFsKCkge1xuICAgICAgICByZXR1cm4gJHVpYk1vZGFsLm9wZW4oe1xuICAgICAgICAgIGFuaW1hdGlvbjogdHJ1ZSxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3JlZ2lzdGVyLm1vZGFsLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXIgOiAnUmVnaXN0ZXJDb250cm9sbGVyJyxcbiAgICAgICAgICBjb250cm9sbGVyQXMgOidSZWdpc3RlckN0cmwnLFxuICAgICAgICAgIHNpemU6ICdtZCdcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICAkdHJhbnNsYXRlKCdUSVRMRScpLnRoZW4oZnVuY3Rpb24gKHRpdGxlKSB7XG4gICAgICAgICAgY29uc29sZS5sb2codGl0bGUpO1xuICAgICAgfSk7XG5cbiAgICAgICQoXCIjdHJ5XCIpLm9uKFwic2Nyb2xsc3RhcnRcIixmdW5jdGlvbigpe1xuICAgICAgICBhbGVydChcIlN0YXJ0ZWQgc2Nyb2xsaW5nIVwiKTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdykuYmluZChcInNjcm9sbFwiLCBmdW5jdGlvbihlKSB7XG4gICAgICAvLyAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtcbiAgICAgIC8vICAgICB2bS5zY3JvbGwgPSB0cnVlO1xuICAgICAgLy8gICB9KVxuICAgICAgLy8gICBjb25zb2xlLmxvZyhcInN0YXJ0IHRvIHNjcm9sbFwiKSBcbiAgICAgIC8vIH0pO1xuXG5cbiAgICB9O1xuXG59KSgpOyIsIihmdW5jdGlvbigpe1xuICAndXNlIHN0cmljdCc7XG5cbiAgLyoqXG4gICogYXBwLnJlZ2lzdGVyIE1vZHVsZVxuICAqXG4gICogRGVzY3JpcHRpb25cbiAgKi9cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ2FwcC5yZWdpc3RlcicpXG4gICAgLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ29udHJvbGxlcicsUmVnaXN0ZXJDb250cm9sbGVyKTtcblxuICAgIFJlZ2lzdGVyQ29udHJvbGxlci4kaW5qZWN0ID0gWydBY2NvdW50U2VydmljZScsJyR1aWJNb2RhbEluc3RhbmNlJ107XG5cbiAgICBmdW5jdGlvbiBSZWdpc3RlckNvbnRyb2xsZXIoQWNjb3VudFNlcnZpY2UsJHVpYk1vZGFsSW5zdGFuY2Upe1xuICAgICAgdmFyIHZtID0gdGhpczsgXG4gICAgICB2bS5hY2NvdW50ID0ge307XG4gICAgICB2bS5zdWJtaXRBY2NvdW50ID0gc3VibWl0QWNjb3VudDtcbiAgICAgIHZtLmNhbmNlbCA9IGNhbmNlbDsgXG5cbiAgICAgIGZ1bmN0aW9uIHN1Ym1pdEFjY291bnQoKXtcbiAgICAgICBcbiAgICAgICAgQWNjb3VudFNlcnZpY2UucG9zdEFjY291bnQodm0uYWNjb3VudCkudGhlbihmdW5jdGlvbihyZXMpe1xuICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICR1aWJNb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgZnVuY3Rpb24gY2FuY2VsKCl7XG4gICAgICAgICR1aWJNb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpO1xuICAgICAgfTtcbiAgICB9O1xuXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
