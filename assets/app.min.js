(function(){
  'use strict';
    /**
  * app Module
  *
  * Description
  */
  angular.module('pandaApp', [
    'app.core',
    'app.landing',
    'app.demo',
    'app.signup',
    'pascalprecht.translate'
  ]);
})();
(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core',[
      'blocks.router',
      'ui.router'
      ])
})();
(function(){
  'use strict';

  /**
  * landing.demo Module
  *
  * Description
  */
  angular
    .module('app.demo', []);
})();
(function(){
  'use strict';

  /**
  * app.landing Module
  *
  * Description
  */
  angular.module('app.landing',[
      'app.core',
      'landing.home',
      'landing.about',
      'landing.career',
      'landing.navbar',
      'landing.feature',
     
    ])
})();
(function(){
  'use strict';
  /**
  * landing.signup Module
  *
  * Description
  */
  angular
    .module('app.signup', []);
})();
(function(){
  'use strict';
 /**
 * blocks.router Module
 *
 * Description
 */
  
  angular.module('blocks.router', [
    'ui.router'
    ]);
})();
(function(){
  'use strict';
  /**
  * landing.about Module
  *
  * Description
  */
  angular
    .module('landing.about', [
      'app.core'
    ])
})();
(function(){
  'use strict';
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('landing.career',[
      'app.core',
      'ui.router'
    ]);
})();
(function(){
  'use strict';
  /**
  * landing.feature Module
  *
  * Description
  */
  angular
    .module('landing.feature', [])
})();
(function(){
  /**
  * app.panda-home Module
  *
  * Description
  */
  angular
    .module('landing.home',[
      'app.core'
    ])

})();
(function(){
  'use strict';
  /**
  * landing.navbar Module
  *
  * Description
  */
  angular
    .module('landing.navbar', [
      'ui.bootstrap',
      'app.register'
    ]);
})();
(function(){
  'use strict';

  /**
  * app.register Module
  *
  * Description
  */
  angular
    .module('app.register', [
      'ui.bootstrap'
    ]);
})();
(function(){
  'use strict';
  /**
  * app Module
  *
  * Description
  */
  angular
    .module('pandaApp')
    .config(appConfig);

    appConfig.$inject = ['$translateProvider'];

    function appConfig($translateProvider){
      $translateProvider.translations('en', {
        TITLE: 'MarketPanda'
      });

      $translateProvider.translations('zh-t',{
        TITLE: '市場熊貓'
      });

      $translateProvider.translations('zh-s',{
        TITLE: '市场熊猫'
      });
    };

})();
(function(){
  'use strict';
  /**
  * landing.demo Module
  *
  * Description
  */
  angular
    .module('app.demo')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun(routerHelper){
      routerHelper.configureState(getStates());
    };

   function getStates() {
        return [
            {
                state: 'demo',
                config: {
                    templateUrl: 'panda-demo.html',
                    url: '/demo',
                    controller : 'DemoController',
                    controllerAs : 'DemoCtrl',
                    title : '请求演示'
                }
            }
        ];
    };


})();
(function(){
  'use strict';
  /**
  * landing.demo Module
  *
  * Description
  */
  angular
    .module('app.demo')
    .controller('DemoController',DemoController);

    DemoController.$inject = [];

    function DemoController(){

    };

})();
(function(){
  'use strict';
  /**
  * app.landing Module
  *
  * Description
  */
    angular
    .module('app.landing')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'landing',
          config: {
              abstract : true,
              templateUrl: './common/content.html'
          }
        }
      ];
    };
})();
(function(){
  'use strict';

  /**
  * landing.signup Module
  *
  * Description
  */
  angular
    .module('app.signup')
    .controller('SignupController',SignupController);

    SignupController.$inject = ['AccountService'];

    function SignupController(AccountService){

    };
})();
(function(){
  'use strict';
  /**
  * landing.signup Module
  *
  * Description
  */

  angular
    .module('app.signup')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates() {
        return [
            {
                state: 'signup',
                config: {
                    templateUrl: 'panda-signup.html',
                    url: '/signup',
                    controller : 'SignupController',
                    controllerAs : 'SignupCtrl',
                    title : '注册'
                }
            }
        ];
    };

})();
(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core')
    .factory('AccountService',AccountService);

    AccountService.$inject = ['$http'];

    function AccountService($http){
        return {
          postAccount : postAccount
        };

        function postAccount(account){
          return $http.post('/api/accounts', account)
                  .then(postSuccess)
                  .catch(postFailed);

          function postSuccess(res){
            return res.data;
          };

          function postFailed(res){
            return console.log(res);
          };

        }; 
    };

})();
(function(){
  'use strict';

  /**
  * blocks.router Module
  *
  * Description
  */
  angular
    .module('blocks.router')
    .provider('routerHelper',routerHelperProvider);

    routerHelperProvider.$inject = ['$locationProvider','$stateProvider','$urlRouterProvider'];

  function routerHelperProvider($locationProvider,$stateProvider,$urlRouterProvider){

    var config = {
      docTitle : 'ConvertLab'
    }

    // $locationProvider.html5Mode({
    //   enabled: true,
    //   requireBase: false
    // });

    this.$get = RouterHelper;

    RouterHelper.$inject = ['$state','$rootScope'];

    function RouterHelper($state, $rootScope){
      var hasOtherwise = false; 

      var service = {
        configureState : configureState,
        getStates : getStates
      };

      init();

      return service;

      function configureState(states, otherwisePath){
        states.forEach(function(state){
          $stateProvider.state(state.state,state.config);
        });

        if ( otherwisePath && !hasOtherwise) {
          hasOtherwise = true; 
          $urlRouterProvider.otherwise(otherwisePath);
        };
      };
      function getStates(){ return $state.get()};

      function init(){
        updateDocTitle();
      };

      function updateDocTitle(){
        $rootScope.$on('$stateChangeSuccess',
          function(event, toState, toParams, fromState, fromParams){
            var title = config.docTitle + ' | ' + (toState.title || '');
            document.body.scrollTop = document.documentElement.scrollTop = 0;
            $rootScope.title = title;

            // tracking code
            _cl_tracker.init();
            _cl_tracker.push({ url: toState.url, targetName: title });
            _cl_tracker.track('open_page');
          });
      };
    };
  };

})();

(function(){
  'use strict';
  /**
* landing.about Module
*
* Description
*/
angular
  .module('landing.about')
  .controller('AboutController',AboutController)

  AboutController.$inject = ['$rootScope'];

  function AboutController($rootScope){
    var vm = this; 
    var top = $("#career").offset().top  - 3.5*parseFloat($('#career').css('marginTop').replace(/auto/,0));
    $('#joinus').click(function () {
        $('html,body').animate({scrollTop:top}, 500);
    });

  };

})();

(function(){
  'use strict';

  /**
  * landing.home Module
  *
  * Description
  */
  angular
    .module('landing.about')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    }

    function getStates() {
        return [
            {
                state: 'landing.about',
                config: {
                    templateUrl: 'panda-about.html',
                    url: '/about',
                    controller : 'AboutController',
                    controllerAs : 'AboutCtrl',
                    title : '关於我们'
                }
            }
        ];
    };
    
})();

(function(){
  'use strict';
  
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('landing.career')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'landing.careers',
          config: {
              templateUrl: 'panda-career.html',
              url: '/careers/:id',
              title : '职缺招聘'
          }
        }
      ];
    };

})();
(function(){
  'use strict';
    /**
  * panadaApp Module
  *
  * Description
  */
  angular
    .module('landing.career')
    .controller('CareerController',CareerController);

    CareerController.$inject = [];

    function CareerController(){
      var vm = this; 
      // vm.careerId = $stateParams.id;
      console.log("it is career page");
    };

})();



(function(){
  'use strict';
  /**
  * landing.feature Module
  *
  * Description
  */
  angular
    .module('landing.feature')
    .controller('FeatureController',FeatureController);

    FeatureController.$inject = [];

    function FeatureController(){
      
    };

})();
(function(){
  'use strict';

  /**
  * landing.feature Module
  *
  * Description
  */
   angular
    .module('landing.feature')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'landing.feature',
          config: {
              templateUrl: 'panda-feature.html',
              url: '/features',
              title : '产品特色'
          }
        }
      ];
    };

})();
(function(){
  /**
* app.home Module
*
* Description
*/
angular
  .module('landing.home')
  .controller('HomeController',HomeController)

  HomeController.$inject = ['AccountService'];

  function HomeController(AccountService){
    var vm = this;
    vm.account = {};
    vm.submit = submit;
    
    
    $(".headline").hide().animate({ left:"0px", opacity:"show"}, 1500);

    function submit(){
      return AccountService.postAccount(vm.account);
    };

  };

})();
(function(){
  'use strict';
  /**
  * landing.home Module
  *
  * Description
  */
  angular
    .module('landing.home')
    .run(appRun);

    /* @ngInject */

    appRun.$inject = ['routerHelper'];

    function appRun(routerHelper) {
        routerHelper.configureState(getStates(),'/');
    };

    function getStates() {
        return [
            {
                state: 'landing.home',
                config: {
                    templateUrl: 'panda-home.html',
                    url: '/',
                    controller : 'HomeController',
                    controllerAs : 'HomeCtrl',
                    title : '首页'
                }
            }
        ];
    };

})();
(function(){
  'use strict';

  /**
  * landing.navbar Module
  *
  * Description
  */
  angular
    .module('landing.navbar')
    .controller('NavbarController', NavbarController);

    NavbarController.$inject = ['$uibModal','$window','$scope','$translate'];

    function NavbarController($uibModal, $window,$scope, $translate){
      var vm = this; 
      vm.scroll = false;
      vm.text = "hello go go";
      vm.openRegisterModal = openRegisterModal; 

      function openRegisterModal() {
        return $uibModal.open({
          animation: true,
          templateUrl: 'register.modal.html',
          controller : 'RegisterController',
          controllerAs :'RegisterCtrl',
          size: 'md'
        });
      };

      $translate('TITLE').then(function (title) {
          console.log(title);
      });

      $("#try").on("scrollstart",function(){
        alert("Started scrolling!");
      });

      // angular.element($window).bind("scroll", function(e) {
      //   $scope.$apply(function(){
      //     vm.scroll = true;
      //   })
      //   console.log("start to scroll") 
      // });


    };

})();
(function(){
  'use strict';

  /**
  * app.register Module
  *
  * Description
  */
  angular
    .module('app.register')
    .controller('RegisterController',RegisterController);

    RegisterController.$inject = ['AccountService','$uibModalInstance'];

    function RegisterController(AccountService,$uibModalInstance){
      var vm = this; 
      vm.account = {};
      vm.submitAccount = submitAccount;
      vm.cancel = cancel; 

      function submitAccount(){
       
        AccountService.postAccount(vm.account).then(function(res){
          if (res) {
            $uibModalInstance.dismiss('cancel');
          };
        });
      };

      function cancel(){
        $uibModalInstance.dismiss('cancel');
      };
    };

})();
//# sourceMappingURL=data:application/json;base64,
