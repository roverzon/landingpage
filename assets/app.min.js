!function(){"use strict";angular.module("pandaApp",["app.core","app.landing","app.demo","app.signup","pascalprecht.translate"])}(),function(){"use strict";angular.module("app.core",["blocks.router","ui.router"])}(),function(){"use strict";angular.module("app.demo",[])}(),function(){"use strict";angular.module("app.landing",["app.core","landing.home","landing.about","landing.career","landing.navbar","landing.feature"])}(),function(){"use strict";angular.module("app.signup",[])}(),function(){"use strict";angular.module("blocks.router",["ui.router"])}(),function(){"use strict";angular.module("landing.career",["app.core","ui.router"])}(),function(){"use strict";angular.module("landing.about",["app.core"])}(),function(){"use strict";angular.module("landing.feature",[])}(),function(){angular.module("landing.home",["app.core"])}(),function(){"use strict";angular.module("landing.navbar",["ui.bootstrap","app.register"])}(),function(){"use strict";angular.module("app.register",["ui.bootstrap"])}(),function(){"use strict";function t(t){t.translations("en",{TITLE:"MarketPanda"}),t.translations("zh-t",{TITLE:"市場熊貓"}),t.translations("zh-s",{TITLE:"市场熊猫"})}angular.module("pandaApp").config(t),t.$inject=["$translateProvider"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"demo",config:{templateUrl:"panda-demo.html",url:"/demo",controller:"DemoController",controllerAs:"DemoCtrl",title:"请求演示"}}]}angular.module("app.demo").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(){}angular.module("app.demo").controller("DemoController",t),t.$inject=[]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing",config:{"abstract":!0,templateUrl:"./common/content.html"}}]}angular.module("app.landing").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t){}angular.module("app.signup").controller("SignupController",t),t.$inject=["AccountService"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"signup",config:{templateUrl:"panda-signup.html",url:"/signup",controller:"SignupController",controllerAs:"SignupCtrl",title:"注册"}}]}angular.module("app.signup").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t){function n(n){function e(t){return t.data}function r(t){return console.log(t)}return t.post("http://host.51convert.cn/page/f45c9e364a0e4a82ab82dbf1049deb1b",n).then(e)["catch"](r)}return{postAccount:n}}angular.module("app.core").factory("AccountService",t),t.$inject=["$http"]}(),function(){"use strict";function t(t,n,e){function r(t,r){function u(t,r){t.forEach(function(t){n.state(t.state,t.config)}),r&&!i&&(i=!0,e.otherwise(r))}function a(){return t.get()}function l(){c()}function c(){r.$on("$stateChangeSuccess",function(t,n,e,u,a){var l=o.docTitle+" | "+(n.title||"");document.body.scrollTop=document.documentElement.scrollTop=0,r.title=l,_cl_tracker.init(),_cl_tracker.push({url:n.url,targetName:l}),_cl_tracker.track("open_page")})}var i=!1,s={configureState:u,getStates:a};return l(),s}var o={docTitle:"ConvertLab"};this.$get=r,r.$inject=["$state","$rootScope"]}angular.module("blocks.router").provider("routerHelper",t),t.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing.careers",config:{templateUrl:"panda-career.html",url:"/careers/:id",title:"职缺招聘"}}]}angular.module("landing.career").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(){console.log("it is career page")}angular.module("landing.career").controller("CareerController",t),t.$inject=[]}(),function(){"use strict";function t(t){var n=$("#career").offset().top-3.5*parseFloat($("#career").css("marginTop").replace(/auto/,0));$("#joinus").click(function(){$("html,body").animate({scrollTop:n},500)})}angular.module("landing.about").controller("AboutController",t),t.$inject=["$rootScope"]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing.about",config:{templateUrl:"panda-about.html",url:"/about",controller:"AboutController",controllerAs:"AboutCtrl",title:"关於我们"}}]}angular.module("landing.about").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(){}angular.module("landing.feature").controller("FeatureController",t),t.$inject=[]}(),function(){"use strict";function t(t){t.configureState(n())}function n(){return[{state:"landing.feature",config:{templateUrl:"panda-feature.html",url:"/features",title:"产品特色"}}]}angular.module("landing.feature").run(t),t.$inject=["routerHelper"]}(),function(){function t(t){function n(){return t.postAccount(e.account)}var e=this;e.account={},e.submit=n,$(".headline").hide().animate({left:"0px",opacity:"show"},1500),window.callback=function(){console.log("angular callback")}}angular.module("landing.home").controller("HomeController",t),t.$inject=["AccountService"]}(),function(){"use strict";function t(t){t.configureState(n(),"/")}function n(){return[{state:"landing.home",config:{templateUrl:"panda-home.html",url:"/",controller:"HomeController",controllerAs:"HomeCtrl",title:"首页"}}]}angular.module("landing.home").run(t),t.$inject=["routerHelper"]}(),function(){"use strict";function t(t,n,e,r){function o(){return t.open({animation:!0,templateUrl:"register.modal.html",controller:"RegisterController",controllerAs:"RegisterCtrl",size:"md"})}var u=this;u.scroll=!1,u.text="hello go go",u.openRegisterModal=o,r("TITLE").then(function(t){console.log(t)}),$("#try").on("scrollstart",function(){alert("Started scrolling!")})}angular.module("landing.navbar").controller("NavbarController",t),t.$inject=["$uibModal","$window","$scope","$translate"]}(),function(){"use strict";function t(t,n){function e(){t.postAccount(o.account).then(function(t){t&&n.dismiss("cancel")})}function r(){n.dismiss("cancel")}var o=this;o.account={},o.submitAccount=e,o.cancel=r}angular.module("app.register").controller("RegisterController",t),t.$inject=["AccountService","$uibModalInstance"]}();
//# sourceMappingURL=data:application/json;base64,
