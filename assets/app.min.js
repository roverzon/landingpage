(function(){
  'use strict';
    /**
  * app Module
  *
  * Description
  */
  angular.module('pandaApp', [
    'app.core',
    'app.landing'
  ]);
})();
(function(){
  'use strict';
  /**
  * app.about Module
  *
  * Description
  */
  angular
    .module('app.about', [
      'app.core'
    ])
})();
(function(){
  'use strict';
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('app.career',[
      'app.core',
      'ui.router'
    ]);
})();
(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core',[
      'blocks.router',
      'ui.router'
      ])
})();
(function(){
  /**
  * app.panda-home Module
  *
  * Description
  */
  angular
    .module('app.home',[
      'app.core'
    ])

})();
(function(){
  'use strict';

  /**
  * app.landing Module
  *
  * Description
  */
  angular.module('app.landing',[
      'app.core',
      'app.home',
      'app.about',
      'app.career',
      'app.navbar'
    ])
})();
(function(){
  'use strict';
  /**
  * app.navbar Module
  *
  * Description
  */
  angular
    .module('app.navbar', [
      'ui.bootstrap',
      'app.register'
    ]);
})();
(function(){
  'use strict';
 /**
 * blocks.router Module
 *
 * Description
 */
  
  angular.module('blocks.router', [
    'ui.router'
    ]);
})();
(function(){
  'use strict';

  /**
  * app.register Module
  *
  * Description
  */
  angular
    .module('app.register', [
      'ui.bootstrap'
    ]);
})();
(function(){
  'use strict';
  /**
* pandaApp Module
*
* Description
*/
angular
  .module('app.about')
  .controller('AboutController',AboutController)

  AboutController.$inject = ['$rootScope'];

  function AboutController($rootScope){
    var vm = this; 
    var top = $("#career").offset().top  - 3.5*parseFloat($('#career').css('marginTop').replace(/auto/,0));
    $('#joinus').click(function () {
        $('html,body').animate({scrollTop:top}, 500);
    });

  };

})();

(function(){
  'use strict';

  /**
  * app.home Module
  *
  * Description
  */
  angular
    .module('app.about')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    }

    function getStates() {
        return [
            {
                state: 'landing.about',
                config: {
                    templateUrl: 'panda-about.html',
                    url: '/about',
                    controller : 'AboutController',
                    controllerAs : 'AboutCtrl',
                    title : '關於我們'
                }
            }
        ];
    };
    
})();

(function(){
  'use strict';
  
  /**
  * app.career Module
  *
  * Description
  */
  angular
    .module('app.career')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'landing.careers',
          config: {
              templateUrl: 'panda-career.html',
              url: '/careers/:id',
              title : '職涯'
          }
        }
      ];
    };

})();
(function(){
  'use strict';
    /**
  * panadaApp Module
  *
  * Description
  */
  angular
    .module('app.career')
    .controller('CareerController',CareerController);

    CareerController.$inject = [];

    function CareerController(){
      var vm = this; 
      // vm.careerId = $stateParams.id;
      console.log("it is career page");
    };

})();



(function(){
  /**
* app.home Module
*
* Description
*/
angular
  .module('app.home')
  .controller('HomeController',HomeController)

  HomeController.$inject = ['AccountService'];

  function HomeController(AccountService){
    var vm = this;
    vm.account = {};
    vm.submit = submit;
    
    
    $(".headline").hide().animate({ left:"0px", opacity:"show"}, 1500);

    function submit(){
      return AccountService.postAccount(vm.account);
    };

  };

})();
(function(){
  'use strict';
  /**
  * app.home Module
  *
  * Description
  */
  angular
    .module('app.home')
    .run(appRun);

    /* @ngInject */

    appRun.$inject = ['routerHelper'];

    function appRun(routerHelper) {
        routerHelper.configureState(getStates(),'/');
    };

    function getStates() {
        return [
            {
                state: 'landing.home',
                config: {
                    templateUrl: 'panda-home.html',
                    url: '/',
                    controller : 'HomeController',
                    controllerAs : 'HomeCtrl',
                    title : '首頁'
                }
            }
        ];
    };

})();
(function(){
  'use strict';
  /**
  * app.landing Module
  *
  * Description
  */
    angular
    .module('app.landing')
    .run(appRun);

    appRun.$inject = ['routerHelper'];

    function appRun( routerHelper ){
      routerHelper.configureState(getStates());
    };

    function getStates(){
      return [
        {
          state: 'landing',
          config: {
              abstract : true,
              templateUrl: './common/content.html'
          }
        }
      ];
    };
})();
(function(){
  'use strict';

  /**
  * app.navbar Module
  *
  * Description
  */
  angular
    .module('app.navbar')
    .controller('NavbarController', NavbarController);

    NavbarController.$inject = ['$uibModal','$window','$scope'];

    function NavbarController($uibModal, $window,$scope){
      var vm = this; 
      vm.scroll = false;
      vm.text = "hello go go";
      vm.openRegisterModal = openRegisterModal; 

      function openRegisterModal() {
        return $uibModal.open({
          animation: true,
          templateUrl: 'register.modal.html',
          controller : 'RegisterController',
          controllerAs :'RegisterCtrl',
          size: 'md'
        });
      };

      $("#try").on("scrollstart",function(){
        alert("Started scrolling!");
      });

      // angular.element($window).bind("scroll", function(e) {
      //   $scope.$apply(function(){
      //     vm.scroll = true;
      //   })
      //   console.log("start to scroll") 
      // });


    };

})();
(function(){
  'use strict';

  /**
  * blocks.router Module
  *
  * Description
  */
  angular
    .module('blocks.router')
    .provider('routerHelper',routerHelperProvider);

    routerHelperProvider.$inject = ['$locationProvider','$stateProvider','$urlRouterProvider'];

  function routerHelperProvider($locationProvider,$stateProvider,$urlRouterProvider){

    var config = {
      docTitle : '成長熊貓'
    }

    // $locationProvider.html5Mode({
    //   enabled: true,
    //   requireBase: false
    // });

    this.$get = RouterHelper;

    RouterHelper.$inject = ['$state','$rootScope'];

    function RouterHelper($state, $rootScope){
      var hasOtherwise = false; 

      var service = {
        configureState : configureState,
        getStates : getStates
      };

      init();

      return service;

      function configureState(states, otherwisePath){
        states.forEach(function(state){
          $stateProvider.state(state.state,state.config);
        });

        if ( otherwisePath && !hasOtherwise) {
          hasOtherwise = true; 
          $urlRouterProvider.otherwise(otherwisePath);
        };
      };
      function getStates(){ return $state.get()};

      function init(){
        updateDocTitle();
      };

      function updateDocTitle(){
        $rootScope.$on('$stateChangeSuccess',
          function(event, toState, toParams, fromState, fromParams){
            var title = config.docTitle + ' | ' + (toState.title || '');
            $rootScope.title = title;
          });
      }
    
    };
  };

})();

(function(){
  'use strict';
  /**
  * app.core Module
  *
  * Description
  */
  angular
    .module('app.core')
    .factory('AccountService',AccountService);

    AccountService.$inject = ['$http'];

    function AccountService($http){
        return {
          postAccount : postAccount
        };

        function postAccount(account){
          return $http.post('/api/accounts', account)
                  .then(postSuccess)
                  .catch(postFailed);

          function postSuccess(res){
            return res.data;
          };

          function postFailed(res){
            return console.log(res);
          };

        }; 
    };

})();
(function(){
  'use strict';

  /**
  * app.register Module
  *
  * Description
  */
  angular
    .module('app.register')
    .controller('RegisterController',RegisterController);

    RegisterController.$inject = ['AccountService','$uibModalInstance'];

    function RegisterController(AccountService,$uibModalInstance){
      var vm = this; 
      vm.account = {};
      vm.submitAccount = submitAccount;
      vm.cancel = cancel; 

      function submitAccount(){
       
        AccountService.postAccount(vm.account).then(function(res){
          if (res) {
            $uibModalInstance.dismiss('cancel');
          };
        });
      };

      function cancel(){
        $uibModalInstance.dismiss('cancel');
      };
    };

})();
//# sourceMappingURL=data:application/json;base64,
